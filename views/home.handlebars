{{! Use the main layout }}
{{!< main }}

{{! New Post Submission Form }}
<section class="content-container">
	{{#if loggedIn}}
		<!-- show the create post form when logged in -->
		<section class="post-form">
			<!-- make a header here -->
			<form action="/posts" method="POST">
				<!-- title input field name = "title" -->
				<!-- text area input field name = "content" -->
				<div id="profile-container">
					<img{{#if user.avatar_url}}
							src="{{user.avatar_url}}" alt="Profile Picture"
						{{else}}
							src="../default-avatar.png" alt="Default Profile Picture"
						{{/if}} class="profile-picture">
					<button type="button" id="emoji-button" onclick="toggleEmojiPanel()">ðŸ˜€</button>
				</div>
				<div id="input-container">
					<input type="text" name="title" placeholder="Title">
					<textarea type="text" name="content" placeholder="Content"></textarea>
				</div>
				<div id="form-actions">
					<button type="submit" class="post-button">Post</button>
				</div>
			</form>

			<div id="emoji-container" class="emoji-panel" style="display: none;">
				<!-- input field for the emoji search, use oninput="searchEmojis() -->
				<!-- a div, id = "emoji-grid" -->
				<input id="emoji-search" type="text" name="emojiSearch" placeholder="Search Emoji">
				<div id="emoji-grid"></div>
			</div>
		</section>
	{{/if}}

	<section class="posts-list">
		<!-- recent posts -->
		{{#if posts.length}}
		<ul>
			{{#each posts}}
				<!-- you have to pass the user in to posts and this is the syntax -->
				{{> post this user=../user}}            
			{{/each}}
		</ul>
		{{else}}
			<!-- no posts, oh no, what now? -->
		{{/if}}
	</section>
</section>


{{! JavaScript for Emoji Integration }}
<script>
/*
	You want to show a subset of the emojis. About 200. However, you also want 
	the user to be able to search all emojis, so, put them in this array when 
	the array is empty so that you have them.
*/

let allEmojis = [];  // Global list to hold all emojis\

function toggleEmojiPanel() {
	const container = document.getElementById('emoji-container');
	container.style.display = container.style.display === 'none' ? 'block' : 'none';

	if(container.style.display === 'block' && allEmojis.length == 0){
		// go "Fetch" you some emojis and show them off with displayEmojis
		try {
			fetch('/emoji', {
					method: 'GET',
				})
				.then(res => res.json())
				.then(emojis => {
					allEmojis = emojis;
					displayEmojis(allEmojis);
					})
		} catch (error) {
			console.log(error);
		}
	}
}

function displayEmojis(emojis,limit=200) {
	const container = document.getElementById('emoji-grid');
	container.innerHTML = '';  // Clear previous results
	if (Array.isArray(emojis) && emojis.length > 0) {
		emojis.slice(0, limit).forEach(emoji => {
			const emojiElement = document.createElement('span');
			emojiElement.textContent = emoji.char;
			emojiElement.title = emoji.name;  // Showing the emoji name on hover
			emojiElement.style.cursor = 'pointer';
			emojiElement.onclick = () => insertEmoji(emoji.char);
			container.appendChild(emojiElement);
		});
	} else {
		container.textContent = 'No emojis found. Try a different search!';
	}
}

function searchEmojis() {
	const searchTerm = document.getElementById('emoji-search').value.toLowerCase();
	// array.filter takes a predicate
	// use string.includes. 
	const filteredEmojis = allEmojis.filter(emoji => 
		emoji.name.toLowerCase().includes(searchTerm) || emoji.category.toLowerCase().includes(searchTerm)
	);
	console.log(filteredEmojis);
	displayEmojis(filteredEmojis);
}

function insertEmoji(emoji) {
	// put an emoji on a form somehow. 
	let textarea = document.getElementById('content');
	textarea.value = textarea.value + emoji;
	// do this when you're doing getting the emoji on the form
	textarea.focus();  // Keep focus on the textarea
}

document.getElementById('emoji-search').addEventListener('input', function(e) {
	searchEmojis();
})
</script>

