{{! Partial for a single post }}
<div class="post">
    <div class="post-content preserve-newlines">
        <h1>{{this.title}}</h1>
        <p>{{this.content}}</p>
    </div>
	<div class="post-avatar" onload="getAvatar(event)">
		<img src="{{this.avatar_url}}" alt="{{this.username}}" class="profile-picture">
		{{!-- TODO: proper styling for stacking the username and timestamp on top of eachother using flex --}}
		<span>Posted by {{this.username}} on {{this.timestamp}}</span>
		{{!-- <span>on {{this.timestamp}}</span> --}}
	</div>
	<div class="post-status-bar">
		<span class="likes">{{this.likes}} likes</span>
		{{#ifCond this.username user.username}}
			<button class="deleteButton" data-id="{{this.id}}" onclick="handleDeleteClick(event)"><i class="fas fa-trash-alt"></i></button>
		{{else}}
			<button class="likeButton" data-id="{{this.id}}" onclick="handleLikeClick(event)">â™¥</button>
		{{/ifCond}}
	</div>
</div>
<script>
	function handleLikeClick(event) {
		const postId = event.target.getAttribute('data-id');
		try {
			fetch('/like/' + postId, {
				method: 'POST',
			})
			.then(res => {
				console.log(res);
				window.location.reload();
			})
			.catch(error => console.error(error))
		} catch (error) {
			console.error(error);
		}
		// you might want to "fetch" something...
	}

	function handleDeleteClick(event) {
		const buttonElement = event.target.closest('.deleteButton');
		const postId = buttonElement.getAttribute('data-id');
		try {
			fetch('/delete/' + postId, {
				method: 'POST',
			})
			.then(res => {
				console.log(res);
				window.location.reload();
			})
			.catch(error => console.error(error))
		} catch (error) {
			console.error(error);
		}
		// you might want to "fetch" something...
	} 
</script>